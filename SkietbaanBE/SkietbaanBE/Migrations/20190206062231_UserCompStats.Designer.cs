// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SkietbaanBE.Models;
using System;

namespace SkietbaanBE.Migrations
{
    [DbContext(typeof(ModelsContext))]
    [Migration("20190206062231_UserCompStats")]
    partial class UserCompStats
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkietbaanBE.Models.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("SkietbaanBE.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SkietbaanBE.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompetitionID");

                    b.Property<string>("PictureURL");

                    b.Property<DateTime>("UploadDate");

                    b.Property<int>("UserID");

                    b.Property<int>("_Score");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionID");

                    b.HasIndex("UserID");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("SkietbaanBE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Admin");

                    b.Property<string>("Email");

                    b.Property<DateTime>("EntryDate");

                    b.Property<DateTime>("MemberExpiry");

                    b.Property<string>("MemberID");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SkietbaanBE.Models.UserCompStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BestScore");

                    b.Property<int>("CompScore");

                    b.Property<DateTime>("Year");

                    b.Property<int>("_CompID");

                    b.Property<int>("_UserID");

                    b.HasKey("Id");

                    b.HasIndex("_CompID");

                    b.HasIndex("_UserID");

                    b.ToTable("UserCompStats");
                });

            modelBuilder.Entity("SkietbaanBE.Models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GId");

                    b.Property<int>("UId");

                    b.HasKey("Id");

                    b.HasIndex("GId");

                    b.HasIndex("UId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SkietbaanBE.Models.Score", b =>
                {
                    b.HasOne("SkietbaanBE.Models.Competition", "Competition")
                        .WithMany()
                        .HasForeignKey("CompetitionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SkietbaanBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkietbaanBE.Models.UserCompStats", b =>
                {
                    b.HasOne("SkietbaanBE.Models.Competition", "Competition")
                        .WithMany()
                        .HasForeignKey("_CompID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SkietbaanBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("_UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkietbaanBE.Models.UserGroup", b =>
                {
                    b.HasOne("SkietbaanBE.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SkietbaanBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
